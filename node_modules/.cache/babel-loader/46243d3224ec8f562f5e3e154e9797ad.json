{"ast":null,"code":"var _jsxFileName = \"/home/silvana/Documentos/react/tutorial/app-tutorial-espanol/src/App.js\";\nimport logo from './images/panda.png';\nimport './css/App.css'; // Components\n\nimport MySubsection from './components/MySubsection';\nimport SectionCard from './components/SectionCard';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction helloWorld(pName, pCountry) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello I'm \", pName, \", it's a pleasure\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"I'm from \", pCountry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n; // This data, now it's mocked data, but in the future it would come from database\n\nconst blogArray = [{\n  title: 'Fried chips',\n  description: 'You will learn about preparing fired chips',\n  theme: 'chips',\n  ingredients: ['potato', 'oil', 'salt']\n}, {\n  title: 'Salad',\n  description: 'I can tell you a bit about cooking a salad',\n  theme: 'salad',\n  ingredients: ['tomato', 'lettuce', 'beans', 'oil', 'salt', 'vinegar']\n}, {\n  title: 'Sauce',\n  description: 'The best sauce you will ever taste on your life!',\n  theme: 'sauce',\n  ingredients: ['tomato', 'pepper', 'onion', 'salt']\n}, {\n  title: 'Lemonade',\n  description: 'Try this lemonade!',\n  theme: 'lemonade',\n  ingredients: ['lemon', 'sugar', 'mint']\n}],\n      blogArrayIsEmpty = (blogArray === null || blogArray === void 0 ? void 0 : blogArray.length) <= 0,\n      blogCards = blogArrayIsEmpty ? [] : blogArray.map((item, pos) => {\n  return /*#__PURE__*/_jsxDEV(SectionCard, {\n    title: item.title,\n    description: item.description,\n    theme: item.theme\n  }, pos, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n}),\n      recipes = blogArrayIsEmpty ? [] : blogArray.map((item, pos) => {\n  return /*#__PURE__*/_jsxDEV(MySubsection, {\n    item: item\n  }, pos, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n}); //React app\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.showSections = true;\n    this.state = {\n      showSections: true\n    };\n\n    this.onHideVariableClick = () => {\n      this.showSections = false;\n      console.log('onHideVariableClick has been executed. The value in this.showSections changes to ', this.showSections, ' but this will NOT render the changes');\n    };\n\n    this.onHideStateClick = () => {\n      // let updatedState = !this.state.showSections;\n      // this.setState({ showSections: updatedState });\n      this.setState((prevState, prevProps) => {\n        return {\n          showSections: !prevState\n        };\n      });\n      console.log('onHideStateClick has been executed. We are using this.setState(), so This WILL render the changes!');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: '0 10px',\n            borderRadius: '5px',\n            boxShadow: '0 2px 5px #ccc'\n          },\n          children: \"This is my little React app!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), helloWorld('Chef Mr Panda', 'Argentina')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onHideVariableClick,\n          children: \"HIDE Sections with variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onHideStateClick,\n          children: \"HIDE Sections with this.state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"sections\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), this.showSections && this.state.showSections ? blogCards : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"subsections\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Subsections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), recipes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/silvana/Documentos/react/tutorial/app-tutorial-espanol/src/App.js"],"names":["logo","MySubsection","SectionCard","React","helloWorld","pName","pCountry","blogArray","title","description","theme","ingredients","blogArrayIsEmpty","length","blogCards","map","item","pos","recipes","App","Component","showSections","state","onHideVariableClick","console","log","onHideStateClick","setState","prevState","prevProps","render","margin","borderRadius","boxShadow"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAO,eAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,QAA3B,EAAoC;AAClC,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,+BAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAAA,C,CAED;;AACA,MAAMC,SAAS,GAAG,CACV;AACEC,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,WAAW,EAAE,4CAFf;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB;AAJf,CADU,EAMP;AACDH,EAAAA,KAAK,EAAE,OADN;AAEDC,EAAAA,WAAW,EAAE,4CAFZ;AAGDC,EAAAA,KAAK,EAAE,OAHN;AAIDC,EAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,EAA+B,KAA/B,EAAsC,MAAtC,EAA8C,SAA9C;AAJZ,CANO,EAWP;AACDH,EAAAA,KAAK,EAAE,OADN;AAEDC,EAAAA,WAAW,EAAE,kDAFZ;AAGDC,EAAAA,KAAK,EAAE,OAHN;AAIDC,EAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,MAA9B;AAJZ,CAXO,EAgBP;AACDH,EAAAA,KAAK,EAAE,UADN;AAEDC,EAAAA,WAAW,EAAE,oBAFZ;AAGDC,EAAAA,KAAK,EAAE,UAHN;AAIDC,EAAAA,WAAW,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB;AAJZ,CAhBO,CAAlB;AAAA,MAuBMC,gBAAgB,GAAG,CAAAL,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEM,MAAX,KAAqB,CAvB9C;AAAA,MAwBMC,SAAS,GAAGF,gBAAgB,GAAG,EAAH,GAAQL,SAAS,CAACQ,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/D,sBACE,QAAC,WAAD;AAAuB,IAAA,KAAK,EAAED,IAAI,CAACR,KAAnC;AAA0C,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAA5D;AAAyE,IAAA,KAAK,EAAEO,IAAI,CAACN;AAArF,KAAkBO,GAAlB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJmC,CAxB1C;AAAA,MA6BMC,OAAO,GAAGN,gBAAgB,GAAG,EAAH,GAAQL,SAAS,CAACQ,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7D,sBACE,QAAC,YAAD;AAAwB,IAAA,IAAI,EAAED;AAA9B,KAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJiC,CA7BxC,C,CAoCA;;AACA,MAAME,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAmC;AAAA;AAAA;AAAA,SACjCC,YADiC,GAClB,IADkB;AAAA,SAEjCC,KAFiC,GAEzB;AACND,MAAAA,YAAY,EAAE;AADR,KAFyB;;AAAA,SAOjCE,mBAPiC,GAOX,MAAM;AAC1B,WAAKF,YAAL,GAAoB,KAApB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,mFAAZ,EAAiG,KAAKJ,YAAtG,EAAoH,uCAApH;AACD,KAVgC;;AAAA,SAajCK,gBAbiC,GAad,MAAM;AACvB;AACA;AAEA,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACtC,eAAO;AAAER,UAAAA,YAAY,EAAE,CAACO;AAAjB,SAAP;AACD,OAFD;AAGAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oGAAZ;AACD,KArBgC;AAAA;;AAuBjCK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAE9B,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAI,UAAA,KAAK,EACP;AACE+B,YAAAA,MAAM,EAAE,QADV;AAEEC,YAAAA,YAAY,EAAE,KAFhB;AAGEC,YAAAA,SAAS,EAAE;AAHb,WADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAYG7B,UAAU,CAAC,eAAD,EAAkB,WAAlB,CAZb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKmB,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,KAAKG,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAS,UAAA,SAAS,EAAC,UAAnB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGI,KAAKL,YAAL,IAAqB,KAAKC,KAAL,CAAWD,YAAhC,GAA+CP,SAA/C,GAA2D,IAH/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAS,UAAA,SAAS,EAAC,aAAnB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGI,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD;;AA1DgC;;AA6DnC,eAAeC,GAAf","sourcesContent":["import logo from './images/panda.png';\nimport './css/App.css';\n\n// Components\nimport MySubsection from './components/MySubsection';\nimport SectionCard from './components/SectionCard'\nimport React from 'react';\n\nfunction helloWorld(pName, pCountry){\n  return (\n    <React.Fragment>\n      <h2>Hello I'm {pName}, it's a pleasure</h2>\n      <h3>I'm from {pCountry}</h3>\n    </React.Fragment>\n  );\n};\n\n// This data, now it's mocked data, but in the future it would come from database\nconst blogArray = [\n        {\n          title: 'Fried chips',\n          description: 'You will learn about preparing fired chips',\n          theme: 'chips',\n          ingredients: ['potato', 'oil', 'salt']\n        }, {\n          title: 'Salad',\n          description: 'I can tell you a bit about cooking a salad',\n          theme: 'salad',\n          ingredients: ['tomato', 'lettuce', 'beans', 'oil', 'salt', 'vinegar']\n        }, {\n          title: 'Sauce',\n          description: 'The best sauce you will ever taste on your life!',\n          theme: 'sauce',\n          ingredients: ['tomato', 'pepper', 'onion', 'salt']\n        }, {\n          title: 'Lemonade',\n          description: 'Try this lemonade!',\n          theme: 'lemonade',\n          ingredients: ['lemon', 'sugar', 'mint']\n        }\n      ],\n      blogArrayIsEmpty = blogArray?.length <= 0,\n      blogCards = blogArrayIsEmpty ? [] : blogArray.map((item, pos) => {\n        return (\n          <SectionCard key={pos} title={item.title} description={item.description} theme={item.theme} />\n        )\n      }),\n      recipes = blogArrayIsEmpty ? [] : blogArray.map((item, pos) => {\n        return (\n          <MySubsection key={pos} item={item}/>\n        )\n      });\n\n\n//React app\nclass App extends React.Component  {\n  showSections = true;\n  state = {\n    showSections: true\n  }\n\n  /* This will NOT render the changes */\n  onHideVariableClick = () => { \n    this.showSections = false;\n    console.log('onHideVariableClick has been executed. The value in this.showSections changes to ', this.showSections, ' but this will NOT render the changes');\n  }\n\n  /* This WILL render the changes */\n  onHideStateClick = () => {\n    // let updatedState = !this.state.showSections;\n    // this.setState({ showSections: updatedState });\n\n    this.setState((prevState, prevProps) => {\n      return { showSections: !prevState }\n    })\n    console.log('onHideStateClick has been executed. We are using this.setState(), so This WILL render the changes!');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          <h1 style={\n            {\n              margin: '0 10px',\n              borderRadius: '5px',\n              boxShadow: '0 2px 5px #ccc'\n            }\n          }>\n            This is my little React app!\n          </h1>\n          {helloWorld('Chef Mr Panda', 'Argentina')}\n        </header>\n\n        <div className='container'>\n          <button onClick={this.onHideVariableClick}>HIDE Sections with variables</button>\n          <button onClick={this.onHideStateClick}>HIDE Sections with this.state</button>\n\n          <section className=\"sections\">\n            <h1>Sections</h1>\n            {\n              this.showSections && this.state.showSections ? blogCards : null \n            }\n          </section>\n          <section className=\"subsections\">\n            <h1>Subsections</h1>\n            {recipes}\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}